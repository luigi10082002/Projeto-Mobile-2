{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\luigi\\\\mobile\\\\Projeto-Mobile-2\\\\src\\\\pages\\\\QRCode\\\\SQRcode.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { useNavigation } from '@react-navigation/core';\nexport function SQRcode() {\n  var navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      qtd = _useState6[0],\n      setQtd = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      info = _useState8[0],\n      setInfo = _useState8[1];\n\n  function cancelScan() {\n    return _regeneratorRuntime.async(function cancelScan$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            navigation.navigate('Home');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context2.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    AsyncStorage.getItem('info').then(function (storagedInfo) {\n      var ProdArray = storagedInfo.split(',').map(function (tech) {\n        return tech.trim();\n      });\n      setTechs(techsArray);\n    });\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(false);\n\n    if (type === type) {\n      setQtd(qtd + 1);\n    }\n\n    setInfo([{\n      cod: data,\n      produto: type,\n      qtd: qtd\n    }]);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFillObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: cancelScan,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Cancelar\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  button: {\n    height: 44,\n    width: 294,\n    backgroundColor: '#FF0000',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginLeft: '10%',\n    marginTop: '150%'\n  },\n  buttonText: {\n    color: '#FFF',\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["C:/luigi/mobile/Projeto-Mobile-2/src/pages/QRCode/SQRcode.js"],"names":["React","useState","useEffect","AsyncStorage","BarCodeScanner","useNavigation","SQRcode","navigation","hasPermission","setHasPermission","scanned","setScanned","qtd","setQtd","info","setInfo","cancelScan","navigate","requestPermissionsAsync","status","getItem","then","storagedInfo","ProdArray","split","map","tech","trim","setTechs","techsArray","handleBarCodeScanned","type","data","cod","produto","styles","container","undefined","StyleSheet","absoluteFillObject","button","buttonText","create","flex","flexDirection","justifyContent","height","width","backgroundColor","alignItems","borderRadius","marginLeft","marginTop","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Text, \n  View, \n  StyleSheet, \n  TouchableOpacity,\n  AsyncStorage } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { useNavigation } from '@react-navigation/core';\n\nexport function SQRcode() {\n  const navigation = useNavigation();\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n  const [qtd, setQtd] = useState(1); \n  const [info, setInfo] = useState();\n\n  async function cancelScan() {\n      \n    navigation.navigate('Home');\n  }\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  useEffect(() => {\n    AsyncStorage.getItem('info').then(storagedInfo => {\n      const ProdArray = storagedInfo.split(',').map(tech => tech.trim());\n\n      setTechs(techsArray);\n    })\n  }, []);\n  \n    const handleBarCodeScanned = ({ type, data }) => {\n      setScanned(false);    \n    \n      if (type === type) {   \n        setQtd(qtd+1); \n      }\n\n      setInfo ([\n        { \n          cod: data, \n          produto: type,\n          qtd: qtd,\n        },\n      ]);\n  }\n\n    if (hasPermission === null) {\n      return <Text>Requesting for camera permission</Text>;\n    }\n    if (hasPermission === false) {\n      return <Text>No access to camera</Text>;\n    }\n\n    return (\n      <View style={styles.container}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        /> \n        <TouchableOpacity onPress={cancelScan} style={styles.button}>\n          <Text style={styles.buttonText}>Cancelar</Text>\n        </TouchableOpacity>\n      </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  button: {\n    height: 44,\n    width: 294,\n    backgroundColor: '#FF0000',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginLeft: '10%',\n    marginTop: '150%',\n  },\n\n  buttonText: {\n    color: '#FFF',\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 25,\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}
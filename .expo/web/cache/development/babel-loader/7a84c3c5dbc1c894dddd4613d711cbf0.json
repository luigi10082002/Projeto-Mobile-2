{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\luigi\\\\mobile\\\\Projeto-Mobile-2\\\\src\\\\pages\\\\SMod.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { useNavigation } from '@react-navigation/core';\nexport function SMod() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      cod = _useState2[0],\n      setCod = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      info = _useState4[0],\n      setInfo = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function readCode() {\n    return _regeneratorRuntime.async(function readCode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            navigation.navigate('SQRcode');\n            ;\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function Confirm() {\n    return _regeneratorRuntime.async(function Confirm$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', _id));\n\n          case 2:\n            console.log(info);\n            navigation.navigate('Home');\n            ;\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    ebehavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: readCode,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }, \"Scanner\")), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Quantidade\"), React.createElement(TextInput, {\n    style: styles.input,\n    autoCorrect: false,\n    value: cod,\n    onChangeText: setCod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: Confirm,\n    style: styles.buttoncon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.confirmText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Confirmar\")))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    textAlign: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  form: {\n    alignSelf: 'stretch',\n    paddingHorizontal: 30,\n    marginTop: 30\n  },\n  label: {\n    fontWeight: 'bold',\n    color: '#444',\n    marginBottom: 8\n  },\n  footer: {\n    width: '100%',\n    paddingHorizontal: 4\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#fff',\n    backgroundColor: '#CACACA',\n    paddingHorizontal: 20,\n    fontSize: 16,\n    color: '#444',\n    height: 44,\n    marginBottom: 20,\n    borderRadius: 2\n  },\n  button: {\n    height: 28,\n    width: 95,\n    backgroundColor: '#4B7DFE',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    borderRadius: 13,\n    marginLeft: 222,\n    marginTop: 79\n  },\n  buttoncon: {\n    height: 44,\n    width: 294,\n    backgroundColor: '#4B7DFE',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginLeft: '5%',\n    marginTop: '100%'\n  },\n  buttonText: {\n    color: '#FFF',\n    fontWeight: 'bold',\n    fontSize: 12,\n    marginRight: 8\n  },\n  confirmText: {\n    color: '#FFF',\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 15,\n    marginLeft: 10,\n    marginTop: 10\n  }\n});\nexport default SMod;","map":{"version":3,"sources":["C:/luigi/mobile/Projeto-Mobile-2/src/pages/SMod.js"],"names":["React","useState","useEffect","AsyncStorage","useNavigation","SMod","cod","setCod","info","setInfo","navigation","readCode","navigate","Confirm","setItem","_id","console","log","styles","container","Platform","OS","form","button","buttonText","label","input","footer","buttoncon","confirmText","StyleSheet","create","flex","width","textAlign","content","alignSelf","paddingHorizontal","marginTop","fontWeight","color","marginBottom","borderWidth","borderColor","backgroundColor","fontSize","height","borderRadius","justifyContent","alignItems","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  View, \r\n  KeyboardAvoidingView, \r\n  Platform, \r\n  Text, \r\n  TextInput, \r\n  TouchableOpacity, \r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  AsyncStorage } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/core';\r\n  \r\nexport function SMod() {\r\n  const [cod, setCod] = useState(''); \r\n  const [info, setInfo] = useState([]);\r\n\r\n  const navigation = useNavigation();\r\n    \r\n  \r\n\r\n    async function readCode() { \r\n      {navigation.navigate('SQRcode')};\r\n    }\r\n\r\n    async function Confirm() {\r\n      await AsyncStorage.setItem('user', _id);\r\n\r\n      console.log(info)\r\n      {navigation.navigate('Home')};\r\n    }\r\n  \r\nreturn (\r\n  //MESMO PRODUTO\r\n  <SafeAreaView style={styles.container}>\r\n        \r\n    <KeyboardAvoidingView ebehavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n\r\n      <ScrollView>\r\n    \r\n        <View style={styles.form}>\r\n              \r\n          <TouchableOpacity onPress={readCode} style={styles.button}>\r\n             <Text style={styles.buttonText}>Scanner</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.label}>Quantidade</Text>\r\n            <TextInput \r\n            style={styles.input}\r\n            autoCorrect={false}\r\n            value={cod}\r\n            onChangeText={setCod}\r\n          />\r\n\r\n\r\n          <View style={styles.footer}>\r\n                \r\n            <TouchableOpacity onPress={Confirm} style={styles.buttoncon}>\r\n              <Text style={styles.confirmText}>Confirmar</Text>\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n      </ScrollView>\r\n          \r\n    </KeyboardAvoidingView>\r\n  </SafeAreaView>\r\n);\r\n}\r\n  \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n  \r\n  },\r\n\r\n  content: {\r\n    flex: 1,\r\n    width: '100%',\r\n  },\r\n  \r\n  form: {\r\n    alignSelf: 'stretch',\r\n    paddingHorizontal: 30,\r\n    marginTop: 30,\r\n  },\r\n\r\n  label: {\r\n    fontWeight: 'bold',\r\n    color: '#444',\r\n    marginBottom: 8,\r\n  },\r\n\r\n  footer: {\r\n    width: '100%',\r\n    paddingHorizontal: 4\r\n  },\r\n\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#fff',\r\n    backgroundColor: '#CACACA',\r\n    paddingHorizontal: 20,\r\n    fontSize: 16,\r\n    color: '#444',\r\n    height: 44,\r\n    marginBottom: 20,\r\n    borderRadius: 2\r\n  },\r\n\r\n  button: {\r\n    height: 28,\r\n    width: 95,\r\n    backgroundColor: '#4B7DFE',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    borderRadius: 13,\r\n    marginLeft: 222,\r\n    marginTop: 79,\r\n  },\r\n\r\n  buttoncon: {\r\n    height: 44,\r\n    width: 294,\r\n    backgroundColor: '#4B7DFE',\r\n    alignItems: 'center',\r\n    borderRadius: 5,\r\n    marginLeft: '5%',\r\n    marginTop: '100%',\r\n  },\r\n  \r\n  buttonText: {\r\n    color: '#FFF',\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n    marginRight: 8,\r\n  },\r\n\r\n  confirmText: {\r\n    color: '#FFF',\r\n    fontWeight: 'bold',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: 15,\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    },\r\n  });\r\n  \r\n  export default SMod;\r\n"]},"metadata":{},"sourceType":"module"}